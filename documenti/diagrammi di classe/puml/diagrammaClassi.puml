@startuml Diagramma Classi
skinparam linetype ortho
'left to right direction


'****************** CLASSI ******************
class Tag {
    - final int id
    - String descrizione
    - {static} int index

    + Tag(String descrizione)
    + Tag(String description, int id)
    + int getId()
    + String getDescrizione()
    + void setDescrizione(String descrizione)
    + {static} void setIndex(int index)
    + boolean equals(Object o)
}

class Contact {
    - String name 
    - String surname 
    - String[] numbers
    - String[] emails
    - Byte[] profilePicture
    - Set<Integer> tagIndexes
    - int id

    + Contact(String name, String surname)
    + int getId()
    + void setId()
    + String getName()
    + void setName(String name)
    + String getSurname()
    + void setSurname(String surname)
    + String[] getNumbers()
    + void setNumbers(String[] numbers)
    + String[] getEmails()
    + void setEmails(String[] emails)
    + Byte[] getProfilePicture()
    + void setProfilePicture(Byte[] profilePicture)
    + Set<Integer> getAllTagIndexes()
    + void removeTagIndex(Integer tagIndex)
    + void addTagIndex(Integer tagIndex)
    + boolean equals(Object o)    
    + String toString()
}

class AddressBook {
    - {static} AddressBook instance
    - ObservableList<Contact> contacts
    - ObservableList<Tag> tags
    - String dbUrl
    - Database db
    - String pathData
    - String pathConfig

    - AddressBook()
    + ObservableList<Contact> getAllContacts()
    + void addContact(Contact c)
    + public void addManyContacts(Collection<Contact> c)
    + void removeContact(Contact c)
    + ObservableList<Tag> getAllTags()
    + Tag getTag(int id)
    + void addTag(Tag tag)
    + void addManyTags(Collection<Tag> c)
    + void removeTag(Tag tag)
    + {static} AddressBook getInstance()
    + void setDBUrl(String dbUrl)
    + String getDBUrl()
    + void saveOBJ()
    + void loadOBJ()
    + void removeOBJ()
    + void removeConfig()
    + void saveToDB()
    + void dataToDB()
    + void loadFromDB()   
    + void loadConfig()
    + void saveConfig()
    + void initDB()
    + Database getDB()
    + String toString()
}

class MainController {
    - AddressBook addressBook
    - Button deleteButton
    - Button saveButton
    - Button editButton
    - Button cancelButton
    - VBox tagVBox
    - TextField searchField
    - TextField nameField
    - TextField surnameField
    - TextField emailField
    - TextField numberField
    - ImageView profileImageView
    - ImageView filterImage
    - TableView<Contact> contactsTable
    - TableColumn<Contact,String> nameColumn
    - TableColumn<Contact,String> surnameColumn
    - AnchorPane contactDetailsPane
    - GridPane numbersPane
    - GridPane emailsPane
    - ContextMenu contextMenu

    + void initialize()
    - void setImageCircle()
    - void searchFieldBinding()    
    - void onFilterClicked()
    - void onAddContact()
    - void onContactClicked(MouseEvent event)
    - void onSaveContact()
    - void onModifyContact()
    - void onRemoveContact()
    - void onCancel()
    - void showImportPopup()
    - void showExportPopup()
    - void showConfigPopup()
    - void showImagePopup()
    - void showManageTagsPopup()
}

class Converter {
    + {static} Collection<Contact> parseCSV(File file)
    + {static} Collection<Contact> parseVCard(File file)
    + {static} boolean checkCSVFormat(File file)
    + {static} boolean checkVCardFormat(File file)
    + {static} void onExportCSV(Collection<Contact> contacts, File file)
    + {static} void onExportVCard(Collection<Contact> contacts, File file)
}

class ImportPopupController {
    - ContactManager contactManager
    - File file
    - Button importButton

    + void initialize()
    - void selectFile()
    - void onImport()
}

class ExportPopupController {
    - ContactManager contactManager
    - File file
    - ChoiceBox<String> exportChoiceBox
    - Button saveButton

    + void initialize()
    - void choosePath()
    - void onExport()
}

class ManageTagsPopupController {
    - TagManager tagManager
    - ListView<String> tagsListView
    - Button addButton
    - Button updateButton
    - Button deleteButton
    - TextField nameField

    + void initialize()
    - void onAdd()
    - void onUpdate()
    - void onDelete()
    - void onTagClicked()
}

class ImagePopupController {
    - ImageView imgAdd
    - HBox defaultImgHBox
    - File selectedImage
    - int imageIndex

    + void initialize()
    + File getSelectedImage()
    + int getImageIndex()
    - void onImageClicked1()
    - void onImageClicked2()
    - void onImageClicked3()
    - void onImageClicked4()
    - void onImageClicked5()
}

class ConfirmPopupController {
    - boolean choice
    + boolean getChoice()
    - onConfirm()
    - onCancel()
}

class ConfigPopupController {
    - AddressBook addressBook
    - Label resultLabel
    - Button verifyButton
    - Button confirmButton
    - TextField textField
    
    + void initialize()
    - void onVerify()
    - void onConfirm()
}

class Database {
    - MongoDatabase mongoDb
    
    + Database(String url)
    + {static} boolean verifyDBUrl(String url)
    + void insert(Contact c)
    + void removeContact(Contact c)
    + void upsert(Tag tag)
    + void removeTag(Tag tag)
    + Collection<Contact> getAllContacts()
    + Collection<Tag> getAllTags()
    + void insertManyContacts(Collection<Contact> contacts)
    + void insertManyTags(Collection<Tag> tags)
    + void deleteAllContacts()
    + void deleteAllTags()
    + Document contactToDocument(Contact c)
    + Contact documentToContact(Document d)
    + Document tagToDocument(Tag tag)
    + Tag documentToTag (Document d)
} 


'****************** INTERFACCE ******************
interface Serializable

interface ContactManager {
    +{abstract} ObservableList<Contact> getAllContacts()
    +{abstract} void addContact(Contact c)
    +{abstract} void addManyContacts(Collection<Contact> c)
    +{abstract} void removeContact(Contact c)
}

interface TagManager {
    +{abstract} void addTag(Tag tag)
    +{abstract} void addManyTags(Collection<Tag> c)
    +{abstract} void removeTag(Tag tag)
    +{abstract} Tag getTag(int id)
    +{abstract} ObservableList<Tag> getAllTags()
}


'****************** RELAZIONI ******************
Contact ..|> Serializable

Tag ..|> Serializable

AddressBook "1" o-- "0..*" Contact
AddressBook "1" *-- "0..1" Database
AddressBook "1" o-- "0..*" Tag
AddressBook ..|> TagManager
AddressBook ..|> ContactManager

MainController "1" o-- "1" AddressBook
MainController ..> ImagePopupController
MainController ..> ConfirmPopupController

Converter ..> Contact

ImportPopupController "1" o-- "1" ContactManager
ImportPopupController ..> Converter

ExportPopupController "1" o-- "1" ContactManager
ExportPopupController ..> Converter

ManageTagsPopupController ..> ConfirmPopupController
ManageTagsPopupController "1" o-- "1" TagManager

ConfigPopupController "1" o-- "1" AddressBook

Database ..> Converter

@enduml